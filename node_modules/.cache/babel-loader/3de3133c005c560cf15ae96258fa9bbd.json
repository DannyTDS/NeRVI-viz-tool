{"ast":null,"code":"var _jsxFileName = \"/Users/happiness/Desktop/React Projects/visualization-app/src/components/AppBody/ImageSection/ImageSection.js\";\nimport React from \"react\";\nimport Window from \"./Window\";\nimport \"./ImageSection.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImageSection = props => {\n  const IMAGES_DIR = \"/data/vortex\";\n  let parsedIsoValue = props.imageParams.iso_value;\n\n  if (props.imageParams.iso_value === \"0\") {\n    parsedIsoValue = \"0.000000\";\n  } else {\n    parsedIsoValue = props.imageParams.iso_value.toString() + \"00000\";\n  }\n\n  const gt_dir = IMAGES_DIR + \"/ground-truth/save-timestep-\" + props.imageParams.time_step + \"-iso-\" + parsedIsoValue + \"-theta-\" + props.imageParams.theta + \".000000-phi-\" + props.imageParams.phi + \".000000.png\";\n  console.log(props.imageParams);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"windows-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Window, {\n      className: \"image-window\",\n      imagePath: gt_dir\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Window, {\n      className: \"image-window\",\n      imagePath: gt_dir\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ImageSection;\nexport default ImageSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageSection\");","map":{"version":3,"names":["React","Window","ImageSection","props","IMAGES_DIR","parsedIsoValue","imageParams","iso_value","toString","gt_dir","time_step","theta","phi","console","log"],"sources":["/Users/happiness/Desktop/React Projects/visualization-app/src/components/AppBody/ImageSection/ImageSection.js"],"sourcesContent":["import React from \"react\";\nimport Window from \"./Window\";\n\nimport \"./ImageSection.css\";\n\nconst ImageSection = (props) => {\n  const IMAGES_DIR = \"/data/vortex\";\n\n  let parsedIsoValue = props.imageParams.iso_value;\n\n  if (props.imageParams.iso_value === \"0\") {\n    parsedIsoValue = \"0.000000\";\n  } else {\n    parsedIsoValue = props.imageParams.iso_value.toString() + \"00000\";\n  }\n\n  const gt_dir = IMAGES_DIR + \"/ground-truth/save-timestep-\" + props.imageParams.time_step + \"-iso-\" + parsedIsoValue + \"-theta-\" + props.imageParams.theta + \".000000-phi-\" + props.imageParams.phi + \".000000.png\";\n  console.log(props.imageParams);\n\n  return (\n    <div className=\"windows-wrapper\">\n      {/* <div className=\"ratio-wrapper\">\n        <Window\n          className=\"image-window\"\n          imagePath=\"/src/data/vortex/ground-truth/save-timestep-3-iso--0.100000-theta-45.000000-phi-90.000000.png\"\n        />\n      </div>\n      <div className=\"ratio-wrapper\">\n        <Window className=\"image-window\" />\n      </div> */}\n      <Window className=\"image-window\" imagePath={gt_dir} />\n      <Window className=\"image-window\" imagePath={gt_dir}/>\n    </div>\n  );\n};\n\nexport default ImageSection;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAO,oBAAP;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;EAC9B,MAAMC,UAAU,GAAG,cAAnB;EAEA,IAAIC,cAAc,GAAGF,KAAK,CAACG,WAAN,CAAkBC,SAAvC;;EAEA,IAAIJ,KAAK,CAACG,WAAN,CAAkBC,SAAlB,KAAgC,GAApC,EAAyC;IACvCF,cAAc,GAAG,UAAjB;EACD,CAFD,MAEO;IACLA,cAAc,GAAGF,KAAK,CAACG,WAAN,CAAkBC,SAAlB,CAA4BC,QAA5B,KAAyC,OAA1D;EACD;;EAED,MAAMC,MAAM,GAAGL,UAAU,GAAG,8BAAb,GAA8CD,KAAK,CAACG,WAAN,CAAkBI,SAAhE,GAA4E,OAA5E,GAAsFL,cAAtF,GAAuG,SAAvG,GAAmHF,KAAK,CAACG,WAAN,CAAkBK,KAArI,GAA6I,cAA7I,GAA8JR,KAAK,CAACG,WAAN,CAAkBM,GAAhL,GAAsL,aAArM;EACAC,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACG,WAAlB;EAEA,oBACE;IAAK,SAAS,EAAC,iBAAf;IAAA,wBAUE,QAAC,MAAD;MAAQ,SAAS,EAAC,cAAlB;MAAiC,SAAS,EAAEG;IAA5C;MAAA;MAAA;MAAA;IAAA,QAVF,eAWE,QAAC,MAAD;MAAQ,SAAS,EAAC,cAAlB;MAAiC,SAAS,EAAEA;IAA5C;MAAA;MAAA;MAAA;IAAA,QAXF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CA7BD;;KAAMP,Y;AA+BN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}